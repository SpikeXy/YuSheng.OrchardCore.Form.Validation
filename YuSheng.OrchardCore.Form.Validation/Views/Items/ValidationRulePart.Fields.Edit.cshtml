@using YuSheng.OrchardCore.Form.Validation.ViewModels;

@model ValidationRulePartEditViewModel
@{
    var typeName = $"{Model.Metadata.Prefix}.Type";
    var currentProvider = Model.ValidationRuleProviders.FirstOrDefault(a => a.Name == Model.Type);
    var isShowCurrentOption = currentProvider == null ? false: currentProvider.IsShowOption;
    var isShowCurrentErrorMessage = currentProvider == null ? false : currentProvider.IsShowErrorMessage;
    var validationRuleProviders = Model.ValidationRuleProviders;

}

<div class="form-group">
    <label asp-for="Type">@T["Validation Type"]</label>
    <select asp-for="Type" class="form-control content-preview-select" onchange="validationTypeChange(this)">
        @foreach (var item in validationRuleProviders)
        {
            <option value="@item.Name"
                    is-show-option="@item.IsShowOption.ToString()"
                    is-show-validationMessage="@item.IsShowErrorMessage.ToString()"
                    data-validation-option="@item.OptionPlaceHolder">
                @T[item.DisplayName]
                </option>
        }
    </select>
    <span class="hint">@T["The Validation type."]</span>
</div>

<div class="form-group validation-option" style="display: @(isShowCurrentOption ? "block" : "none")">
    <label asp-for="Option">@T["Validation Options"]</label>
    <input asp-for="Option" type="text" class="form-control content-preview-text" />
</div>

<div class="form-group validation-error-message" style="display: @(isShowCurrentErrorMessage ? "block" : "none")">
    <label asp-for="ErrorMessage">@T["Error Message"]</label>
    <input asp-for="ErrorMessage" type="text" class="form-control content-preview-text" />
    <span class="hint">@T["Error message after the field validation fails."]</span>
</div>

<script asp-src="~/YuSheng.OrchardCore.Form.Validation/Scripts/validationRuleHelper.min.js" debug-src="~/YuSheng.OrchardCore.Form.Validation/Scripts/validationRuleHelper.js" asp-name="validationRuleHelper" depends-on="jQuery" at="Foot"></script>